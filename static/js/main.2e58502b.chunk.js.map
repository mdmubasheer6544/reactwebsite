{"version":3,"sources":["logo.svg","Component/Task/Relay.js","Component/Task/Sensor.js","Component/Task/Task.js","Landing.jsx","App.js","reportWebVitals.js","index.js"],"names":["Relay","options","i","useState","inputs","setInputs","className","htmlFor","aria-label","onChange","e","index","target","value","map","item","Itemindex","type","placeholder","defaultValue","option","Sensor","props","label","id","Task","selectValue","setselectValue","Landing","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAAe,I,mBCyCAA,EAvCD,WAEV,IADA,IAAMC,EAAU,GACNC,EAAI,EAAGA,EAAI,GAAIA,IACrBD,EAAQC,GAAKA,EAAI,EAHL,MAMKC,qBANL,mBAMdC,EANc,KAMPC,EANO,KAiBhB,OACE,qCACA,sBAAKC,UAAU,OAAf,UACG,uBAAOC,QAAQ,2BAA2BD,UAAU,aAApD,qBAGH,yBACGA,UAAU,eACXE,aAAW,0BAA0BC,SAAU,SAACC,GAlBnC,IAACC,IAkBkDD,EAAEE,OAAOC,MAjB5ER,GAAU,WACJ,OAAOJ,EAAQa,KAAI,SAACC,EAAKC,GACxB,KAAOA,EAAUL,GACb,OAAO,uBAAOM,KAAK,OAAuBC,YAAW,mBAAcF,EAAU,IAA9CA,UAYzC,UAGE,wBAAQG,aAAa,wBAArB,mCACClB,EAAQa,KAAI,SAACM,EAAOT,GACnB,OAAO,wBAAQE,MAAOO,EAAf,0BAA+CA,IAAnBA,YAIvC,qBAAKd,UAAU,OAAf,SACGF,QCFMiB,EA9BA,SAACC,GACd,OACE,gCACE,sBAAKhB,UAAU,OAAf,UACE,wBAAOC,QAAQ,2BAA2BD,UAAU,aAApD,UACGgB,EAAMC,MADT,SAGA,uBACEN,KAAK,OACLX,UAAU,eACVkB,GAAG,2BACHN,YAAW,UAAKI,EAAMC,MAAX,YAGf,sBAAKjB,UAAU,OAAf,UACE,wBAAOC,QAAQ,2BAA2BD,UAAU,aAApD,UACGgB,EAAMC,MADT,WAGA,uBACEN,KAAK,OACLX,UAAU,eACVkB,GAAG,2BACHN,YAAW,UAAKI,EAAMC,MAAX,cAGE,UAAhBD,EAAMC,MAAoB,cAAC,EAAD,IAAY,SCC9BE,G,MAzBF,WAAO,IAAD,EACqBtB,qBADrB,mBACVuB,EADU,KACGC,EADH,KAEjB,OACE,sBAAKrB,UAAU,YAAf,UACE,uBAAOC,QAAQ,2BAA2BD,UAAU,aAApD,oCAGA,yBAASA,UAAU,eAAeO,MAAOa,EAAajB,SAAU,SAACC,GAC7DiB,EAAejB,EAAEE,OAAOC,QAD5B,UAGE,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,sBAIkB,WAAda,EAAuB,cAAC,EAAD,CAAQH,MAAM,WACvB,UAAdG,EAAsB,cAAC,EAAD,CAAQH,MAAM,UACtB,UAAdG,EAAsB,cAAC,EAAD,CAAQH,MAAM,UAAU,UCrB7CK,EAAU,WACnB,OACI,8BAEA,cAAC,EAAD,OCIOC,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.2e58502b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useEffect, useState} from 'react';\r\n\r\nconst Relay = () => {\r\n    const options = [];\r\n    for ( let i = 0; i < 32; i++) {\r\n        options[i] = i + 1;\r\n      }\r\n    \r\nconst[inputs,setInputs]= useState();\r\n    const showInputs=(index)=>{ \r\n     setInputs(()=>{\r\n           return options.map((item,Itemindex)=>{  \r\n            while (Itemindex<index) {\r\n                return <input type=\"text\" key={Itemindex} placeholder={`Text Box ${Itemindex+1}`} />              \r\n            }\r\n            \r\n        })\r\n       }) \r\n    }\r\n    return (\r\n      <>\r\n      <div className=\"mb-3\">\r\n         <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\r\n       Modules\r\n        </label>\r\n      <select\r\n         className=\"form-control\"\r\n        aria-label=\".form-select-lg example\" onChange={(e)=>{showInputs(e.target.value)}}>\r\n        <option defaultValue=\"Open this select menu\">Open this select menu</option>\r\n        {options.map((option,index)=>{\r\n          return <option value={option} key={option}>{`module ${option}`}</option>\r\n      })}\r\n      </select>\r\n        </div>\r\n      <div className=\"mb-3\">\r\n        {inputs}\r\n    </div>\r\n    </>  \r\n    );\r\n};\r\n\r\nexport default Relay;","import React from \"react\";\r\nimport Relay from \"./Relay\";\r\n\r\nconst Sensor = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\r\n          {props.label} ID\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"exampleFormControlInput1\"\r\n          placeholder={`${props.label} Id`}\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\r\n          {props.label} Name\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id=\"exampleFormControlInput1\"\r\n          placeholder={`${props.label} Name`}\r\n        />\r\n      </div>\r\n      {props.label === \"Relay\" ? <Relay /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sensor;\r\n","import React, { useState } from \"react\";\r\nimport Sensor from './Sensor';\r\nimport 'F:/reactwebsite/node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n;\r\nconst Task = () => {\r\n  const [selectValue, setselectValue] = useState();\r\n  return (\r\n    <div className=\"container\">\r\n      <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">\r\n       Please Select a device\r\n        </label>\r\n      <select  className=\"form-control\" value={selectValue} onChange={(e)=>{\r\n          setselectValue(e.target.value)\r\n      }}>\r\n        <option value=\"Choose device\">Choose device</option>\r\n        <option value=\"Sensor\">Sensor</option>\r\n        <option value=\"Motor\">Motor</option>\r\n        <option value=\"Relay\">Relay</option>\r\n      </select>\r\n    \r\n       \r\n           {selectValue===\"Sensor\"?<Sensor label=\"Sensor\" />:\r\n           (selectValue===\"Motor\"?<Sensor label=\"Motor\" />:\r\n           (selectValue===\"Relay\"?<Sensor label=\"Relay\"/>:null))}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from 'react';\r\nimport Task from './Component/Task/Task'\r\nexport const Landing = () => {\r\n    return (\r\n        <div>\r\n        \r\n        <Task/>\r\n       \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport {Landing }from './Landing'\n\nfunction App() {\n  return (\n    <Landing />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}